function cg = clebsch_gordan(j1, m1, j2, m2, j3, m3)
    if m1 + m2 ~= m3 || j3 < abs(j1 - j2) || j3 > j1 + j2
        cg = 0; return;
    end
    t_min = max([0, j2 - m1 - j3, j1 + m2 - j3]);
    t_max = min([j1 + j2 - j3, j1 - m1, j2 + m2]);
    sum_term = 0;
    for t = t_min:t_max
        denom = factorial(t) * factorial(j1 + j2 - j3 - t) * ...
                factorial(j1 - m1 - t) * factorial(j2 + m2 - t) * ...
                factorial(j3 - j2 + m1 + t) * factorial(j3 - j1 - m2 + t);
        sum_term = sum_term + (-1)^t / denom;
    end
    prefactor = sqrt(...
        (2*j3 + 1) * factorial(j1 + j2 - j3) * factorial(j1 - j2 + j3) * ...
        factorial(-j1 + j2 + j3) / factorial(j1 + j2 + j3 + 1) * ...
        factorial(j3 + m3) * factorial(j3 - m3) * ...
        factorial(j1 + m1) * factorial(j1 - m1) * ...
        factorial(j2 + m2) * factorial(j2 - m2));
    cg = prefactor * sum_term;
end